<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.concertView.web.repository.MemberRepository">

    <select id="findAll" resultType="com.project.concertView.domain.dao.member.Member">
        SELECT * FROM member
    </select>

    <insert id="saveInfo" parameterType="com.project.concertView.domain.dao.member.SaveMember" keyProperty="id">
        insert into member(name,address,detailAddress,email, loginId,password,joinDay,birth,phoneNumber)
        values (#{name}, #{address},#{detailAddress}, #{email}, #{loginId}, #{password}, now(),#{birth},#{phoneNumber});
    </insert>

    <select id="findOne" resultType="com.project.concertView.domain.dao.member.Member">
        SELECT * FROM member where id = #{id};
    </select>
    <select id="findById" parameterType="java.lang.String"
            resultType="java.lang.Long">
        SELECT id FROM member where loginId = #{loginId};
    </select>

    <select id="findLoginId" resultType="java.lang.String">
        SELECT loginId FROM member where loginId = #{loginId};
    </select>


    <select id="findByLoginId" resultType="java.lang.Long">
        SELECT loginId FROM member where id = #{id};
    </select>

    <select id="findPhoneNumber" resultType="java.lang.String">
        SELECT phoneNumber FROM member where phoneNumber = #{phoneNumber};
    </select>

    <select id="findEmail" resultType="java.lang.String">
        SELECT email FROM member where email = #{email};
    </select>

    <select id="loginMember" parameterType="com.project.concertView.domain.dto.LoginMemberDTO"
            resultType="java.lang.Long">
        SELECT id FROM member where loginId=#{loginId} and password=#{password};
    </select>

    <insert id="insertLikeConcert" parameterType="com.project.concertView.domain.dao.concert.LikeConcertInsert" keyProperty="id">
        insert into likeConcert(memberId,mt20id)
        values (#{memberId}, #{mt20id});
    </insert>

    <select id="deleteLikeConcert" parameterType="java.lang.Long">
        delete from likeConcert where id = #{id};
    </select>

    <select id="findPassword" parameterType="com.project.concertView.domain.dao.member.FindPassword" resultType="java.lang.Long">
        select ifnull(id,null) from member where  loginId=#{loginId} and email=#{email} and birth=#{birth} and password=#{password};
    </select>

    <select id="findByLoginIdFromId" parameterType="java.lang.Long"
            resultType="java.lang.String">
        select loginId from member where id = #{id}
    </select>


    <select id="updatePassword" parameterType="com.project.concertView.domain.dao.member.UpdatePassword">
        update member set password=#{password} where id=#{id};
    </select>

<!--    <select id="likeConcertList" parameterType="java.lang.Long" resultType="com.project.concertView.domain.dao.concert.String">-->
<!--        select * from likeConcert where memberId=#{memberId}-->
<!--    </select>-->

    <!--    <select id="findEmail" resultType="java.lang.String">-->
    <!--        SELECT loginId FROM member where loginId = #{loginId};-->
    <!--    </select>-->

    <!--    <select id="deleteInfo">-->
    <!--        delete from visitor where id = #{id};-->
    <!--    </select>-->


    <!--    <select id="updateInfo">-->
    <!--        update visitor set loginId=#{loginId}, password=#{password}, employee_name=#{employee_name}, name=#{name}, phone_number=#{phone_number},-->
    <!--        company=#{company}, visit_date1=#{visit_date1}, visit_date2=#{visit_date2}, withPerson=#{withPerson}, id=#{id},-->
    <!--        purpose=#{purpose}, write_date=#{write_date}, revised_write_date=#{revised_write_date}, count=#{count}+1, is_checked=#{is_checked} where id = #{id};-->
    <!--    </select>-->

    <!--    <select id="updateCheckedInfo">-->
    <!--        update visitor set is_checked=#{is_checked},checked_date=#{checked_date} where id = #{id};-->
    <!--    </select>-->


</mapper>