<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.concertView.web.repository.MemberRepository">

    <select id="findAll" resultType="com.project.concertView.domain.dao.member.Member">
        SELECT * FROM member
    </select>

    <select id="saveInfo" statementType="CALLABLE" parameterType="com.project.concertView.domain.dao.member.SaveMember" resultType="java.util.HashMap">
        {call INSERT_ALL(
        #{name},#{loginId}, #{address}, #{email}, #{password}, now(),#{birth},#{phoneNumber},#{detailAddress}) }
    </select>

    <select id="deleteAll" statementType="CALLABLE" parameterType="java.lang.Long" resultType="java.util.HashMap">
        {call DELETE_ALL(#{id}) }
    </select>

    <select id="findOne" resultType="com.project.concertView.domain.dao.member.Member">
        SELECT * FROM member where id = #{id};
    </select>

    <select id="findById" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT id FROM member where loginId = #{loginId};
    </select>

    <select id="findLoginId" resultType="java.lang.String">
        SELECT loginId FROM member where loginId = #{loginId};
    </select>

    <select id="findByLoginId" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT id from member where loginId= #{loginId};
    </select>

    <select id="findPhoneNumber" resultType="java.lang.String">
        SELECT phoneNumber FROM member where phoneNumber = #{phoneNumber};
    </select>

    <select id="findEmail" resultType="java.lang.String">
        SELECT email FROM member where email = #{email};
    </select>

    <select id="loginMember" parameterType="com.project.concertView.domain.dto.LoginMemberDTO"
            resultType="java.lang.Long">
        SELECT id FROM member where loginId=#{loginId} and password=#{password};
    </select>


    <select id="findPassword" parameterType="com.project.concertView.domain.dao.member.FindPassword" resultType="java.lang.Long">
        select ifnull(id,null) from member where loginId=#{loginId} and email=#{email} and birth=#{birth} and phoneNumber=#{phoneNumber};
    </select>

    <select id="findByLoginIdFromId" parameterType="java.lang.Long"
            resultType="java.lang.String">
        select loginId from member where id = #{id}
    </select>


    <select id="updatePassword" parameterType="com.project.concertView.domain.dao.member.UpdatePassword">
        update member set password=#{password} where id=#{id};
    </select>

</mapper>